[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mercur-e"
version = "1.0.0"
description = "AI-powered GitHub Bot with FastAPI and FastMCP for intelligent repository automation"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Claude Sonnet", email = "claude@anthropic.com"}
]
maintainers = [
    {name = "Claude Sonnet", email = "claude@anthropic.com"}
]
keywords = [
    "github",
    "bot",
    "automation",
    "fastapi",
    "fastmcp",
    "ai",
    "webhook",
    "github-app",
    "ci-cd"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Version Control :: Git",
    "Framework :: FastAPI",
]

dependencies = [
    "fastapi==0.109.0",
    "uvicorn[standard]==0.27.0",
    "python-multipart==0.0.6",
    "PyGithub==2.1.1",
    "PyJWT==2.8.0",
    "cryptography==41.0.7",
    "requests==2.31.0",
    "httpx==0.27.2",
    "fastmcp==0.1.0",
    "pamela==1.1.0",
    "python-dotenv==1.0.0",
    "pydantic==2.10.5",
    "pydantic-settings==2.6.1",
    "loguru==0.7.2",
    "python-jose[cryptography]==3.3.0",
    "aiofiles==25.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "flake8>=6.1.0",
    "mypy>=1.5.0",
    "isort>=5.12.0",
]

test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.27.2",
]

[project.urls]
Homepage = "https://github.com/Rafo044/mercur-e"
Documentation = "https://github.com/Rafo044/mercur-e#readme"
Repository = "https://github.com/Rafo044/mercur-e"
Issues = "https://github.com/Rafo044/mercur-e/issues"
Changelog = "https://github.com/Rafo044/mercur-e/releases"

[project.scripts]
mercur-e = "mercur_e.main:main"
mercur-e-mcp = "mercur_e.mcp_server:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["mercur_e*"]
exclude = ["tests*"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=mercur_e --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.black]
line-length = 100
target-version = ['py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
skip_gitignore = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.coverage.run]
source = ["src/mercur_e"]
omit = ["*/tests/*", "*/venv/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
